{"ast":null,"code":"var _jsxFileName = \"/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/MainQuestions.js\";\nimport React, { Component } from \"react\";\nimport MCQ from \"./MCQ\";\nimport OpenEndedQ from \"./openEndedQ\";\nimport BBox from \"./BBox\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainQuestions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      current_question: 0,\n      when_to_display: 30000,\n      last_call: 0,\n      is_displayed: false,\n      results: []\n    };\n\n    this.setDisplay = truth => {\n      const adapt_state = this.state;\n      adapt_state.is_displayed = truth;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.updateResults = question_results => {\n      this.setResults(question_results, this.state.current_question);\n      console.log(this.state.results);\n    };\n\n    this.setResults = (results, current_question) => {\n      const adapt_state = this.state;\n      adapt_state.results[current_question] = results;\n      console.log(adapt_state.results, this.state.results, this.state.current_question);\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.updateDisplay = () => {\n      const adapt_state = this.state;\n      adapt_state.is_displayed = false;\n      adapt_state.current_question += 1;\n      adapt_state.when_to_display += this.props.config[\"interval\"];\n    };\n\n    this.renderQuestion = () => {\n      if (this.props.time === 330000) {\n        var copy = {};\n        Object.assign(copy, this.state.results);\n        this.props.update_results(copy);\n      }\n\n      if (this.state.is_displayed) {\n        if (this.props.config[\"questions\"][this.state.current_question][\"type\"] === \"open-ended\") {\n          return /*#__PURE__*/_jsxDEV(OpenEndedQ, {\n            config: this.props.config[\"questions\"][this.state.current_question],\n            current_question: this.state.current_question,\n            update_results: this.updateResults,\n            update_display: this.updateDisplay,\n            user_busyness: this.props.config[\"busyness\"],\n            interval: this.props.config[\"interval\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this);\n        } else if (this.props.config[\"questions\"][this.state.current_question][\"type\"] === \"mcq\") {\n          return /*#__PURE__*/_jsxDEV(MCQ, {\n            config: this.props.config[\"questions\"][this.state.current_question],\n            current_question: this.state.current_question,\n            update_results: this.updateResults,\n            update_display: this.updateDisplay,\n            user_busyness: this.props.config[\"busyness\"],\n            interval: this.props.config[\"interval\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this);\n        } else if (this.props.config[\"questions\"][this.state.current_question][\"type\"] === \"bbox\") {\n          return /*#__PURE__*/_jsxDEV(BBox, {\n            config: this.props.config[\"questions\"][this.state.current_question],\n            current_question: this.state.current_question,\n            update_results: this.updateResults,\n            update_display: this.updateDisplay,\n            user_busyness: this.props.config[\"busyness\"],\n            interval: this.props.config[\"interval\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 16\n          }, this);\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", \"You have 60 seconds to answer the following question. Please click submit the moment you are done with you ranswer to the question.\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), this.renderQuestion()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMainQuestions.getDerivedStateFromProps = (nextProps, prevState) => {\n  const adapt_state = prevState;\n\n  if (!prevState.is_displayed) {\n    if (prevState.when_to_display === nextProps.time) {\n      adapt_state.is_displayed = true;\n      adapt_state.last_call = prevState.when_to_display + 59000;\n      return adapt_state;\n    }\n  } else {\n    if (prevState.last_call === nextProps.time) {\n      adapt_state.is_displayed = false;\n      adapt_state.current_question += 1;\n      adapt_state.when_to_display = prevState.when_to_display + nextProps.config[\"interval\"];\n      console.log(adapt_state);\n      return adapt_state;\n    }\n  }\n\n  return null;\n};\n\nexport default MainQuestions;","map":{"version":3,"names":["React","Component","MCQ","OpenEndedQ","BBox","MainQuestions","state","current_question","when_to_display","last_call","is_displayed","results","setDisplay","truth","adapt_state","setState","updateResults","question_results","setResults","console","log","updateDisplay","props","config","renderQuestion","time","copy","Object","assign","update_results","render","getDerivedStateFromProps","nextProps","prevState"],"sources":["/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/MainQuestions.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport MCQ from \"./MCQ\";\nimport OpenEndedQ from \"./openEndedQ\";\nimport BBox from \"./BBox\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass MainQuestions extends Component {\n  state = {\n    current_question: 0,\n    when_to_display: 30000,\n    last_call: 0,\n    is_displayed: false,\n    results: [],\n  };\n\n  setDisplay = (truth) => {\n    const adapt_state = this.state;\n    adapt_state.is_displayed = truth;\n    this.setState({ adapt_state });\n  };\n\n  updateResults = (question_results) => {\n    this.setResults(question_results, this.state.current_question);\n    console.log(this.state.results);\n  };\n\n  setResults = (results, current_question) => {\n    const adapt_state = this.state;\n    adapt_state.results[current_question] = results;\n    console.log(\n      adapt_state.results,\n      this.state.results,\n      this.state.current_question\n    );\n    this.setState({ adapt_state });\n  };\n\n  static getDerivedStateFromProps = (nextProps, prevState) => {\n    const adapt_state = prevState;\n    if (!prevState.is_displayed) {\n      if (prevState.when_to_display === nextProps.time) {\n        adapt_state.is_displayed = true;\n        adapt_state.last_call = prevState.when_to_display + 59000;\n        return adapt_state;\n      }\n    } else {\n      if (prevState.last_call === nextProps.time) {\n        adapt_state.is_displayed = false;\n        adapt_state.current_question += 1;\n        adapt_state.when_to_display =\n          prevState.when_to_display + nextProps.config[\"interval\"];\n        console.log(adapt_state);\n        return adapt_state;\n      }\n    }\n    return null;\n  };\n  updateDisplay = () => {\n    const adapt_state = this.state;\n    adapt_state.is_displayed = false;\n    adapt_state.current_question += 1;\n    adapt_state.when_to_display += this.props.config[\"interval\"];\n  };\n\n  renderQuestion = () => {\n    if (this.props.time === 330000) {\n      var copy = {};\n      Object.assign(copy, this.state.results);\n      this.props.update_results(copy);\n    }\n\n    if (this.state.is_displayed) {\n      if (\n        this.props.config[\"questions\"][this.state.current_question][\"type\"] ===\n        \"open-ended\"\n      ) {\n        return (\n          <OpenEndedQ\n            config={this.props.config[\"questions\"][this.state.current_question]}\n            current_question={this.state.current_question}\n            update_results={this.updateResults}\n            update_display={this.updateDisplay}\n            user_busyness={this.props.config[\"busyness\"]}\n            interval={this.props.config[\"interval\"]}\n          ></OpenEndedQ>\n        );\n      } else if (\n        this.props.config[\"questions\"][this.state.current_question][\"type\"] ===\n        \"mcq\"\n      ) {\n        return (\n          <MCQ\n            config={this.props.config[\"questions\"][this.state.current_question]}\n            current_question={this.state.current_question}\n            update_results={this.updateResults}\n            update_display={this.updateDisplay}\n            user_busyness={this.props.config[\"busyness\"]}\n            interval={this.props.config[\"interval\"]}\n          ></MCQ>\n        );\n      } else if (\n        this.props.config[\"questions\"][this.state.current_question][\"type\"] ===\n        \"bbox\"\n      ) {\n        return (\n          <BBox\n            config={this.props.config[\"questions\"][this.state.current_question]}\n            current_question={this.state.current_question}\n            update_results={this.updateResults}\n            update_display={this.updateDisplay}\n            user_busyness={this.props.config[\"busyness\"]}\n            interval={this.props.config[\"interval\"]}\n          ></BBox>\n        );\n      } else {\n        return <div></div>;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>\n          {\" \"}\n          You have 60 seconds to answer the following question. Please click\n          submit the moment you are done with you ranswer to the question.{\" \"}\n        </h3>\n        {this.renderQuestion()}\n      </div>\n    );\n  }\n}\n\nexport default MainQuestions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}