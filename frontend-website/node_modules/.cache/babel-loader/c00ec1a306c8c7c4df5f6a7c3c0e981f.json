{"ast":null,"code":"var _jsxFileName = \"/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/MainQuestions.js\";\nimport React, { Component } from \"react\";\nimport MCQ from \"./MCQ\";\nimport OpenEndedQ from \"./openEndedQ\";\nimport BBox from \"./BBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainQuestions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      current_question: 0,\n      when_to_display: 5000,\n      last_call: 0,\n      is_displayed: false,\n      results: []\n    };\n\n    this.setDisplay = truth => {\n      const adapt_state = this.state;\n      adapt_state.is_displayed = truth;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.updateResults = question_results => {\n      this.setResults(question_results, this.current_question);\n      console.log(this.state.results);\n    };\n\n    this.setResults = (results, current_question) => {\n      const adapt_state = this.state;\n      adapt_state.results[current_question] = results;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.renderQuestion = () => {\n      if (this.props.time == 330000) {\n        var copy = {};\n        Object.assign(copy, this.state.results);\n        this.props.update_results(copy);\n      }\n\n      if (this.state.is_displayed) {\n        if (this.props.config[\"questions\"][this.state.current_question][\"type\"] === \"open-ended\") {\n          return /*#__PURE__*/_jsxDEV(OpenEndedQ, {\n            config: this.props.config[\"questions\"][this.state.current_question],\n            current_question: this.state.current_question,\n            update_results: this.updateResults,\n            set_display: this.setDisplay,\n            user_busyness: this.props.config[\"busyness\"],\n            interval: this.props.config[\"interval\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this);\n        } else if (this.props.config[\"questions\"][this.state.current_question][\"type\"] === \"mcq\") {\n          return /*#__PURE__*/_jsxDEV(MCQ, {\n            config: this.props.config[\"questions\"][this.state.current_question],\n            current_question: this.state.current_question,\n            update_results: this.updateResults,\n            set_display: this.setDisplay,\n            user_busyness: this.props.config[\"busyness\"],\n            interval: this.props.config[\"interval\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this);\n        } else if (this.props.config[\"questions\"][this.state.current_question][\"type\"] === \"bbox\") {\n          return /*#__PURE__*/_jsxDEV(BBox, {\n            config: this.props.config[\"questions\"][this.state.current_question],\n            current_question: this.state.current_question,\n            update_results: this.updateResults,\n            set_display: this.setDisplay,\n            user_busyness: this.props.config[\"busyness\"],\n            interval: this.props.config[\"interval\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 16\n          }, this);\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderQuestion()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nMainQuestions.getDerivedStateFromProps = (nextProps, prevState) => {\n  const adapt_state = prevState;\n\n  if (!prevState.is_displayed) {\n    if (prevState.when_to_display === nextProps.time) {\n      adapt_state.is_displayed = true;\n      adapt_state.last_call = prevState.when_to_display + 10000;\n      return adapt_state;\n    }\n  } else {\n    if (prevState.last_call === nextProps.time) {\n      adapt_state.is_displayed = false;\n      adapt_state.current_question += 1;\n      adapt_state.when_to_display = prevState.when_to_display + nextProps.config[\"interval\"];\n      return adapt_state;\n    }\n  }\n\n  return null;\n};\n\nexport default MainQuestions;","map":{"version":3,"names":["React","Component","MCQ","OpenEndedQ","BBox","MainQuestions","state","current_question","when_to_display","last_call","is_displayed","results","setDisplay","truth","adapt_state","setState","updateResults","question_results","setResults","console","log","renderQuestion","props","time","copy","Object","assign","update_results","config","render","getDerivedStateFromProps","nextProps","prevState"],"sources":["/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/MainQuestions.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport MCQ from \"./MCQ\";\nimport OpenEndedQ from \"./openEndedQ\";\nimport BBox from \"./BBox\";\n\nclass MainQuestions extends Component {\n  state = {\n    current_question: 0,\n    when_to_display: 5000,\n    last_call: 0,\n    is_displayed: false,\n    results: [],\n  };\n\n  setDisplay = (truth) => {\n    const adapt_state = this.state;\n    adapt_state.is_displayed = truth;\n    this.setState({ adapt_state });\n  };\n\n  updateResults = (question_results) => {\n    this.setResults(question_results, this.current_question);\n    console.log(this.state.results);\n  };\n\n  setResults = (results, current_question) => {\n    const adapt_state = this.state;\n    adapt_state.results[current_question] = results;\n\n    this.setState({ adapt_state });\n  };\n\n  static getDerivedStateFromProps = (nextProps, prevState) => {\n    const adapt_state = prevState;\n    if (!prevState.is_displayed) {\n      if (prevState.when_to_display === nextProps.time) {\n        adapt_state.is_displayed = true;\n        adapt_state.last_call = prevState.when_to_display + 10000;\n        return adapt_state;\n      }\n    } else {\n      if (prevState.last_call === nextProps.time) {\n        adapt_state.is_displayed = false;\n        adapt_state.current_question += 1;\n        adapt_state.when_to_display =\n          prevState.when_to_display + nextProps.config[\"interval\"];\n        return adapt_state;\n      }\n    }\n    return null;\n  };\n\n  renderQuestion = () => {\n    if (this.props.time == 330000) {\n      var copy = {};\n      Object.assign(copy, this.state.results);\n      this.props.update_results(copy);\n    }\n\n    if (this.state.is_displayed) {\n      if (\n        this.props.config[\"questions\"][this.state.current_question][\"type\"] ===\n        \"open-ended\"\n      ) {\n        return (\n          <OpenEndedQ\n            config={this.props.config[\"questions\"][this.state.current_question]}\n            current_question={this.state.current_question}\n            update_results={this.updateResults}\n            set_display={this.setDisplay}\n            user_busyness={this.props.config[\"busyness\"]}\n            interval={this.props.config[\"interval\"]}\n          ></OpenEndedQ>\n        );\n      } else if (\n        this.props.config[\"questions\"][this.state.current_question][\"type\"] ===\n        \"mcq\"\n      ) {\n        return (\n          <MCQ\n            config={this.props.config[\"questions\"][this.state.current_question]}\n            current_question={this.state.current_question}\n            update_results={this.updateResults}\n            set_display={this.setDisplay}\n            user_busyness={this.props.config[\"busyness\"]}\n            interval={this.props.config[\"interval\"]}\n          ></MCQ>\n        );\n      } else if (\n        this.props.config[\"questions\"][this.state.current_question][\"type\"] ===\n        \"bbox\"\n      ) {\n        return (\n          <BBox\n            config={this.props.config[\"questions\"][this.state.current_question]}\n            current_question={this.state.current_question}\n            update_results={this.updateResults}\n            set_display={this.setDisplay}\n            user_busyness={this.props.config[\"busyness\"]}\n            interval={this.props.config[\"interval\"]}\n          ></BBox>\n        );\n      } else {\n        return <div></div>;\n      }\n    }\n  };\n\n  render() {\n    return <div>{this.renderQuestion()}</div>;\n  }\n}\n\nexport default MainQuestions;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;EAAA;IAAA;IAAA,KACpCK,KADoC,GAC5B;MACNC,gBAAgB,EAAE,CADZ;MAENC,eAAe,EAAE,IAFX;MAGNC,SAAS,EAAE,CAHL;MAINC,YAAY,EAAE,KAJR;MAKNC,OAAO,EAAE;IALH,CAD4B;;IAAA,KASpCC,UAToC,GAStBC,KAAD,IAAW;MACtB,MAAMC,WAAW,GAAG,KAAKR,KAAzB;MACAQ,WAAW,CAACJ,YAAZ,GAA2BG,KAA3B;MACA,KAAKE,QAAL,CAAc;QAAED;MAAF,CAAd;IACD,CAbmC;;IAAA,KAepCE,aAfoC,GAenBC,gBAAD,IAAsB;MACpC,KAAKC,UAAL,CAAgBD,gBAAhB,EAAkC,KAAKV,gBAAvC;MACAY,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWK,OAAvB;IACD,CAlBmC;;IAAA,KAoBpCO,UApBoC,GAoBvB,CAACP,OAAD,EAAUJ,gBAAV,KAA+B;MAC1C,MAAMO,WAAW,GAAG,KAAKR,KAAzB;MACAQ,WAAW,CAACH,OAAZ,CAAoBJ,gBAApB,IAAwCI,OAAxC;MAEA,KAAKI,QAAL,CAAc;QAAED;MAAF,CAAd;IACD,CAzBmC;;IAAA,KA+CpCO,cA/CoC,GA+CnB,MAAM;MACrB,IAAI,KAAKC,KAAL,CAAWC,IAAX,IAAmB,MAAvB,EAA+B;QAC7B,IAAIC,IAAI,GAAG,EAAX;QACAC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB,KAAKlB,KAAL,CAAWK,OAA/B;QACA,KAAKW,KAAL,CAAWK,cAAX,CAA0BH,IAA1B;MACD;;MAED,IAAI,KAAKlB,KAAL,CAAWI,YAAf,EAA6B;QAC3B,IACE,KAAKY,KAAL,CAAWM,MAAX,CAAkB,WAAlB,EAA+B,KAAKtB,KAAL,CAAWC,gBAA1C,EAA4D,MAA5D,MACA,YAFF,EAGE;UACA,oBACE,QAAC,UAAD;YACE,MAAM,EAAE,KAAKe,KAAL,CAAWM,MAAX,CAAkB,WAAlB,EAA+B,KAAKtB,KAAL,CAAWC,gBAA1C,CADV;YAEE,gBAAgB,EAAE,KAAKD,KAAL,CAAWC,gBAF/B;YAGE,cAAc,EAAE,KAAKS,aAHvB;YAIE,WAAW,EAAE,KAAKJ,UAJpB;YAKE,aAAa,EAAE,KAAKU,KAAL,CAAWM,MAAX,CAAkB,UAAlB,CALjB;YAME,QAAQ,EAAE,KAAKN,KAAL,CAAWM,MAAX,CAAkB,UAAlB;UANZ;YAAA;YAAA;YAAA;UAAA,QADF;QAUD,CAdD,MAcO,IACL,KAAKN,KAAL,CAAWM,MAAX,CAAkB,WAAlB,EAA+B,KAAKtB,KAAL,CAAWC,gBAA1C,EAA4D,MAA5D,MACA,KAFK,EAGL;UACA,oBACE,QAAC,GAAD;YACE,MAAM,EAAE,KAAKe,KAAL,CAAWM,MAAX,CAAkB,WAAlB,EAA+B,KAAKtB,KAAL,CAAWC,gBAA1C,CADV;YAEE,gBAAgB,EAAE,KAAKD,KAAL,CAAWC,gBAF/B;YAGE,cAAc,EAAE,KAAKS,aAHvB;YAIE,WAAW,EAAE,KAAKJ,UAJpB;YAKE,aAAa,EAAE,KAAKU,KAAL,CAAWM,MAAX,CAAkB,UAAlB,CALjB;YAME,QAAQ,EAAE,KAAKN,KAAL,CAAWM,MAAX,CAAkB,UAAlB;UANZ;YAAA;YAAA;YAAA;UAAA,QADF;QAUD,CAdM,MAcA,IACL,KAAKN,KAAL,CAAWM,MAAX,CAAkB,WAAlB,EAA+B,KAAKtB,KAAL,CAAWC,gBAA1C,EAA4D,MAA5D,MACA,MAFK,EAGL;UACA,oBACE,QAAC,IAAD;YACE,MAAM,EAAE,KAAKe,KAAL,CAAWM,MAAX,CAAkB,WAAlB,EAA+B,KAAKtB,KAAL,CAAWC,gBAA1C,CADV;YAEE,gBAAgB,EAAE,KAAKD,KAAL,CAAWC,gBAF/B;YAGE,cAAc,EAAE,KAAKS,aAHvB;YAIE,WAAW,EAAE,KAAKJ,UAJpB;YAKE,aAAa,EAAE,KAAKU,KAAL,CAAWM,MAAX,CAAkB,UAAlB,CALjB;YAME,QAAQ,EAAE,KAAKN,KAAL,CAAWM,MAAX,CAAkB,UAAlB;UANZ;YAAA;YAAA;YAAA;UAAA,QADF;QAUD,CAdM,MAcA;UACL,oBAAO;YAAA;YAAA;YAAA;UAAA,QAAP;QACD;MACF;IACF,CArGmC;EAAA;;EAuGpCC,MAAM,GAAG;IACP,oBAAO;MAAA,UAAM,KAAKR,cAAL;IAAN;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AAzGmC;;AAAhChB,a,CA2BGyB,wB,GAA2B,CAACC,SAAD,EAAYC,SAAZ,KAA0B;EAC1D,MAAMlB,WAAW,GAAGkB,SAApB;;EACA,IAAI,CAACA,SAAS,CAACtB,YAAf,EAA6B;IAC3B,IAAIsB,SAAS,CAACxB,eAAV,KAA8BuB,SAAS,CAACR,IAA5C,EAAkD;MAChDT,WAAW,CAACJ,YAAZ,GAA2B,IAA3B;MACAI,WAAW,CAACL,SAAZ,GAAwBuB,SAAS,CAACxB,eAAV,GAA4B,KAApD;MACA,OAAOM,WAAP;IACD;EACF,CAND,MAMO;IACL,IAAIkB,SAAS,CAACvB,SAAV,KAAwBsB,SAAS,CAACR,IAAtC,EAA4C;MAC1CT,WAAW,CAACJ,YAAZ,GAA2B,KAA3B;MACAI,WAAW,CAACP,gBAAZ,IAAgC,CAAhC;MACAO,WAAW,CAACN,eAAZ,GACEwB,SAAS,CAACxB,eAAV,GAA4BuB,SAAS,CAACH,MAAV,CAAiB,UAAjB,CAD9B;MAEA,OAAOd,WAAP;IACD;EACF;;EACD,OAAO,IAAP;AACD,C;;AA+DH,eAAeT,aAAf"},"metadata":{},"sourceType":"module"}