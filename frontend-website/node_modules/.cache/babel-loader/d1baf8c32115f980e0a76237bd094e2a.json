{"ast":null,"code":"var _jsxFileName = \"/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/StudyPage.js\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport React, { Component } from \"react\";\nimport \"./studyPage.css\";\nimport DistractionTask from \"./DistractionTask\";\nimport MainQuestions from \"./MainQuestions\";\nimport { Button, ModalBody } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Survey from \"./Survey\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StudyPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateSurvey = (results, current_survey) => {\n      const adapt_state = this.state;\n      adapt_state.survey_results[current_survey] = results;\n      this.setState({\n        adapt_state\n      });\n      this.updateNextSurvey();\n      this.restartTimer();\n      this.setDisplay(false);\n    };\n\n    this.setDisplay = truth => {\n      this.setState({\n        display_survey: truth\n      });\n    };\n\n    this.updateNextSurvey = () => {\n      const adapt_state = this.state;\n      adapt_state.survey_timer += this.props.config[this.state.current_condition][\"main-task\"][\"interval\"];\n      adapt_state.current_survey += 1;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.updateMain = results => {\n      const adapt_state = this.state;\n      adapt_state.main_task_results = results;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.updateSide = results => {\n      const adapt_state = this.state;\n      adapt_state.distraction_task_results = results;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.move_to = study_part => {\n      this.props.router.navigate(\"/\" + this.state.user_id + \"/study/\" + study_part.toString());\n    };\n\n    this.setTimerId = id => {\n      const adapt_state = this.state;\n      adapt_state.main_timer_id = id;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.setTimer = time => {\n      const adapt_state = this.state;\n      adapt_state.timer = time;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.setEndTimer = time => {\n      const adapt_state = this.state;\n      adapt_state.end_timer = time;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.setEndTimerId = time => {\n      const adapt_state = this.state;\n      adapt_state.end_timer_id = time;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.studyCompletition = () => {\n      clearInterval(this.state.end_timer_id);\n      const results = {\n        user_id: this.state.user_id,\n        study_condition: this.state.current_condition,\n        study_order: this.state.study_order,\n        main_task_results: this.state.main_task_results,\n        distraction_task_results: this.state.distraction_task_results,\n        survey_results: this.state.survey_results\n      };\n      console.log(results);\n      this.move_to(parseInt(this.props.router.params.study_part_i) + 1);\n    };\n\n    this.updateEndTime = () => {\n      if (this.state.end_time === 30000) {\n        this.studyCompletition();\n      } else {\n        const adapt_state = this.state;\n        adapt_state.end_time += 1000;\n        this.setState({\n          adapt_state\n        });\n        this.printEndTime();\n        console.log(this.state.end_time);\n      }\n    };\n\n    this.setStart = truth => {\n      const adapt_state = this.state;\n      adapt_state.experiment_start = truth;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.updateCurrentTime = () => {\n      if (this.state.current_time === this.state.total_time) {\n        clearInterval(this.state.main_timer_id);\n        this.startEndTimer();\n      } else {\n        const adapt_state = this.state;\n        adapt_state.current_time += 1000;\n        this.setState({\n          adapt_state\n        });\n        this.printTime();\n        this.updateSurveyCondition();\n      }\n    };\n\n    this.getTimeRemaining = () => {\n      const total = this.state.total_time - this.state.current_time;\n      const seconds = Math.floor(total / 1000 % 60);\n      const minutes = Math.floor(total / 1000 / 60 % 60);\n      const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n      return {\n        total,\n        hours,\n        minutes,\n        seconds\n      };\n    };\n\n    this.getEndTimeRemaining = () => {\n      const total = 30000 - this.state.end_time;\n      const seconds = Math.floor(total / 1000 % 60);\n      const minutes = Math.floor(total / 1000 / 60 % 60);\n      const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n      return {\n        total,\n        hours,\n        minutes,\n        seconds\n      };\n    };\n\n    this.printEndTime = () => {\n      let {\n        total,\n        hours,\n        minutes,\n        seconds\n      } = this.getEndTimeRemaining();\n\n      if (total >= 0) {\n        this.setEndTimer((hours > 9 ? hours : \"0\" + hours) + \":\" + (minutes > 9 ? minutes : \"0\" + minutes) + \":\" + (seconds > 9 ? seconds : \"0\" + seconds));\n      }\n    };\n\n    this.printTime = () => {\n      let {\n        total,\n        hours,\n        minutes,\n        seconds\n      } = this.getTimeRemaining();\n\n      if (total >= 0) {\n        this.setTimer((hours > 9 ? hours : \"0\" + hours) + \":\" + (minutes > 9 ? minutes : \"0\" + minutes) + \":\" + (seconds > 9 ? seconds : \"0\" + seconds));\n      }\n    };\n\n    this.pauseTimer = () => {\n      clearInterval(this.state.main_timer_id);\n      this.setTimerId(null);\n    };\n\n    this.restartTimer = () => {\n      const id = setInterval(() => {\n        this.updateCurrentTime();\n      }, 1000);\n      this.setTimerId(id);\n    };\n\n    this.startTimer = () => {\n      const id = setInterval(() => {\n        this.updateCurrentTime();\n      }, 1000);\n      this.setTimerId(id);\n      this.setStart(false);\n    };\n\n    this.startEndTimer = () => {\n      const id = setInterval(() => {\n        this.updateEndTime();\n      }, 1000);\n      this.setEndTimerId(id);\n    };\n\n    this.updateSurveyCondition = () => {\n      if (this.state.current_time === this.state.survey_timer) {\n        this.setDisplay(true);\n        this.pauseTimer();\n      }\n    };\n\n    this.displayStudy = () => {\n      if (this.state.experiment_start) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: this.startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this);\n      } else {\n        if (this.state.current_time === this.state.total_time) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Modal, {\n              show: true,\n              backdrop: \"static\",\n              keyboard: false,\n              size: \"lg\",\n              \"aria-labelledby\": \"contained-modal-title-vcenter\",\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                  children: \"Condition Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"We have submitted your responses, and you have 30 seconds until you are redirected to the next page. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 62\n                  }, this), \" If you feel like you are ready to move to the next section click the button below this.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: [\"Break Time Remaining \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 42\n                    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: this.state.end_timer\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"primary\",\n                      type: \"submit\",\n                      onClick: this.studyCompletition,\n                      children: \"Move to next condition\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 11\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Survey, {\n              update_results: this.updateSurvey,\n              enabled: this.state.display_survey,\n              current_survey: this.state.current_survey\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm border-10\",\n                  children: /*#__PURE__*/_jsxDEV(DistractionTask, {\n                    config: this.props.config[this.state.current_condition][\"side-task\"],\n                    time: this.state.current_time,\n                    update_results: this.updateSide\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm border-10\",\n                  children: /*#__PURE__*/_jsxDEV(MainQuestions, {\n                    config: this.props.config[this.state.current_condition][\"main-task\"],\n                    time: this.state.current_time,\n                    update_results: this.updateMain\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 11\n          }, this);\n        }\n      }\n    };\n\n    this.state = {\n      timer: \"00:05:32\",\n      total_time: 2000,\n      current_time: 0,\n      study_order: parseInt(this.props.router.params.study_part_i),\n      current_condition: this.props.ordering[parseInt(this.props.router.params.study_part_i)],\n      main_timer_id: null,\n      user_id: this.props.router.params.id,\n      experiment_start: true,\n      main_task_results: null,\n      distraction_task_results: null,\n      survey_results: [],\n      survey_timer: this.props.config[this.props.ordering[parseInt(this.props.router.params.study_part_i)]][\"main-task\"][\"first survey\"],\n      current_survey: 0,\n      display_survey: false,\n      end_time: 0,\n      end_timer_id: null,\n      end_timer: \"00:00:30\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: this.state.timer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), this.displayStudy()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StudyPage;","map":{"version":3,"names":["React","Component","DistractionTask","MainQuestions","Button","ModalBody","Modal","Survey","StudyPage","constructor","props","updateSurvey","results","current_survey","adapt_state","state","survey_results","setState","updateNextSurvey","restartTimer","setDisplay","truth","display_survey","survey_timer","config","current_condition","updateMain","main_task_results","updateSide","distraction_task_results","move_to","study_part","router","navigate","user_id","toString","setTimerId","id","main_timer_id","setTimer","time","timer","setEndTimer","end_timer","setEndTimerId","end_timer_id","studyCompletition","clearInterval","study_condition","study_order","console","log","parseInt","params","study_part_i","updateEndTime","end_time","printEndTime","setStart","experiment_start","updateCurrentTime","current_time","total_time","startEndTimer","printTime","updateSurveyCondition","getTimeRemaining","total","seconds","Math","floor","minutes","hours","getEndTimeRemaining","pauseTimer","setInterval","startTimer","displayStudy","ordering","render"],"sources":["/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/StudyPage.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport React, { Component } from \"react\";\nimport \"./studyPage.css\";\nimport DistractionTask from \"./DistractionTask\";\nimport MainQuestions from \"./MainQuestions\";\nimport { Button, ModalBody } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport Survey from \"./Survey\";\n\nclass StudyPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timer: \"00:05:32\",\n      total_time: 2000,\n      current_time: 0,\n      study_order: parseInt(this.props.router.params.study_part_i),\n      current_condition:\n        this.props.ordering[parseInt(this.props.router.params.study_part_i)],\n      main_timer_id: null,\n      user_id: this.props.router.params.id,\n      experiment_start: true,\n      main_task_results: null,\n      distraction_task_results: null,\n      survey_results: [],\n      survey_timer:\n        this.props.config[\n          this.props.ordering[parseInt(this.props.router.params.study_part_i)]\n        ][\"main-task\"][\"first survey\"],\n      current_survey: 0,\n      display_survey: false,\n      end_time: 0,\n      end_timer_id: null,\n      end_timer: \"00:00:30\",\n    };\n  }\n\n  updateSurvey = (results, current_survey) => {\n    const adapt_state = this.state;\n    adapt_state.survey_results[current_survey] = results;\n    this.setState({ adapt_state });\n    this.updateNextSurvey();\n    this.restartTimer();\n    this.setDisplay(false);\n  };\n\n  setDisplay = (truth) => {\n    this.setState({ display_survey: truth });\n  };\n\n  updateNextSurvey = () => {\n    const adapt_state = this.state;\n    adapt_state.survey_timer +=\n      this.props.config[this.state.current_condition][\"main-task\"][\"interval\"];\n    adapt_state.current_survey += 1;\n    this.setState({ adapt_state });\n  };\n\n  updateMain = (results) => {\n    const adapt_state = this.state;\n    adapt_state.main_task_results = results;\n    this.setState({ adapt_state });\n  };\n\n  updateSide = (results) => {\n    const adapt_state = this.state;\n    adapt_state.distraction_task_results = results;\n    this.setState({ adapt_state });\n  };\n\n  move_to = (study_part) => {\n    this.props.router.navigate(\n      \"/\" + this.state.user_id + \"/study/\" + study_part.toString()\n    );\n  };\n\n  setTimerId = (id) => {\n    const adapt_state = this.state;\n    adapt_state.main_timer_id = id;\n    this.setState({ adapt_state });\n  };\n\n  setTimer = (time) => {\n    const adapt_state = this.state;\n    adapt_state.timer = time;\n\n    this.setState({ adapt_state });\n  };\n\n  setEndTimer = (time) => {\n    const adapt_state = this.state;\n    adapt_state.end_timer = time;\n\n    this.setState({ adapt_state });\n  };\n\n  setEndTimerId = (time) => {\n    const adapt_state = this.state;\n    adapt_state.end_timer_id = time;\n    this.setState({ adapt_state });\n  };\n\n  studyCompletition = () => {\n    clearInterval(this.state.end_timer_id);\n    const results = {\n      user_id: this.state.user_id,\n      study_condition: this.state.current_condition,\n      study_order: this.state.study_order,\n      main_task_results: this.state.main_task_results,\n      distraction_task_results: this.state.distraction_task_results,\n      survey_results: this.state.survey_results,\n    };\n    console.log(results);\n    this.move_to(parseInt(this.props.router.params.study_part_i) + 1);\n  };\n\n  updateEndTime = () => {\n    if (this.state.end_time === 30000) {\n      this.studyCompletition();\n    } else {\n      const adapt_state = this.state;\n      adapt_state.end_time += 1000;\n      this.setState({ adapt_state });\n      this.printEndTime();\n      console.log(this.state.end_time);\n    }\n  };\n  setStart = (truth) => {\n    const adapt_state = this.state;\n    adapt_state.experiment_start = truth;\n\n    this.setState({ adapt_state });\n  };\n\n  updateCurrentTime = () => {\n    if (this.state.current_time === this.state.total_time) {\n      clearInterval(this.state.main_timer_id);\n      this.startEndTimer();\n    } else {\n      const adapt_state = this.state;\n      adapt_state.current_time += 1000;\n      this.setState({ adapt_state });\n      this.printTime();\n      this.updateSurveyCondition();\n    }\n  };\n\n  getTimeRemaining = () => {\n    const total = this.state.total_time - this.state.current_time;\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds,\n    };\n  };\n\n  getEndTimeRemaining = () => {\n    const total = 30000 - this.state.end_time;\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds,\n    };\n  };\n\n  printEndTime = () => {\n    let { total, hours, minutes, seconds } = this.getEndTimeRemaining();\n    if (total >= 0) {\n      this.setEndTimer(\n        (hours > 9 ? hours : \"0\" + hours) +\n          \":\" +\n          (minutes > 9 ? minutes : \"0\" + minutes) +\n          \":\" +\n          (seconds > 9 ? seconds : \"0\" + seconds)\n      );\n    }\n  };\n\n  printTime = () => {\n    let { total, hours, minutes, seconds } = this.getTimeRemaining();\n    if (total >= 0) {\n      this.setTimer(\n        (hours > 9 ? hours : \"0\" + hours) +\n          \":\" +\n          (minutes > 9 ? minutes : \"0\" + minutes) +\n          \":\" +\n          (seconds > 9 ? seconds : \"0\" + seconds)\n      );\n    }\n  };\n\n  pauseTimer = () => {\n    clearInterval(this.state.main_timer_id);\n    this.setTimerId(null);\n  };\n\n  restartTimer = () => {\n    const id = setInterval(() => {\n      this.updateCurrentTime();\n    }, 1000);\n    this.setTimerId(id);\n  };\n\n  startTimer = () => {\n    const id = setInterval(() => {\n      this.updateCurrentTime();\n    }, 1000);\n    this.setTimerId(id);\n    this.setStart(false);\n  };\n\n  startEndTimer = () => {\n    const id = setInterval(() => {\n      this.updateEndTime();\n    }, 1000);\n    this.setEndTimerId(id);\n  };\n\n  updateSurveyCondition = () => {\n    if (this.state.current_time === this.state.survey_timer) {\n      this.setDisplay(true);\n      this.pauseTimer();\n    }\n  };\n\n  displayStudy = () => {\n    if (this.state.experiment_start) {\n      return (\n        <div>\n          <Button variant=\"primary\" type=\"submit\" onClick={this.startTimer}>\n            Start\n          </Button>\n        </div>\n      );\n    } else {\n      if (this.state.current_time === this.state.total_time) {\n        return (\n          <div>\n            <Modal\n              show={true}\n              backdrop=\"static\"\n              keyboard={false}\n              size=\"lg\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n            >\n              <Modal.Header>\n                <Modal.Title>Condition Completed</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div>\n                  We have submitted your responses, and you have 30 seconds\n                  until you are redirected to the next page. <br /> If you feel\n                  like you are ready to move to the next section click the\n                  button below this.\n                  <br />\n                  <center>\n                    Break Time Remaining <br />\n                    <h2>{this.state.end_timer}</h2>\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={this.studyCompletition}\n                    >\n                      Move to next condition\n                    </Button>\n                  </center>\n                </div>\n                <br />\n                <div></div>\n              </Modal.Body>\n            </Modal>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <Survey\n              update_results={this.updateSurvey}\n              enabled={this.state.display_survey}\n              current_survey={this.state.current_survey}\n            ></Survey>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-sm border-10\">\n                  <DistractionTask\n                    config={\n                      this.props.config[this.state.current_condition][\n                        \"side-task\"\n                      ]\n                    }\n                    time={this.state.current_time}\n                    update_results={this.updateSide}\n                  ></DistractionTask>\n                </div>\n                <div className=\"col-sm border-10\">\n                  <MainQuestions\n                    config={\n                      this.props.config[this.state.current_condition][\n                        \"main-task\"\n                      ]\n                    }\n                    time={this.state.current_time}\n                    update_results={this.updateMain}\n                  ></MainQuestions>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"Timer\">\n          <h2>{this.state.timer}</h2>\n          {this.displayStudy()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StudyPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}