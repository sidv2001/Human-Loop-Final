{"ast":null,"code":"var _jsxFileName = \"/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/RanNum.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\ngetRandomInt = max => {\n  return Math.floor(Math.random() * max);\n};\n\nclass RanNum extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questions_asked: [],\n      question_answers: [],\n      current_question: (this.getRandomInt(this.props.max), this.getRandomInt(this.props.max), \" + \"),\n      current_question_number: 0,\n      is_displayed: true,\n      when_to_display: 30000\n    };\n\n    this.update_answers = event => {\n      const adapt_state = this.state;\n      adapt_state.question_answers[this.state.current_question_number] = event.target.value;\n      this.setState({\n        adapt_state\n      });\n    };\n\n    this.submitHandler = () => {\n      const adapt_state = this.state;\n      adapt_state.questions_asked.push(this.state.current_question);\n      adapt_state.current_question_number += 1;\n      adapt_state.current_question = (this.getRandomInt(this.props.max), this.getRandomInt(this.props.max), \" + \");\n      adapt_state.is_displayed = false;\n      this.setState({\n        adapt_state\n      });\n      this.props.update_answers({\n        questions_asked: adapt_state.questions_asked,\n        question_answers: adapt_state.question_answers\n      });\n    };\n  }\n\n  render() {\n    if (this.state.is_displayed) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"Form.Question\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" \", \"Please solve the following math problem: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 60\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [\" \", this.state.current_question[0], \" \", this.state.current_question[2], \" \", this.state.current_question[1]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 1,\n              onChange: this.update_answers,\n              disabled: this.props.disabled\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: this.submitHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nRanNum.getDerivedStateFromProps = (nextProps, prevState) => {\n  const adapt_state = prevState;\n\n  if (!prevState.is_displayed) {\n    if (prevState.when_to_display === nextProps.time) {\n      adapt_state.is_displayed = true;\n      adapt_state.last_call = prevState.when_to_display + nextProps.interval;\n      return adapt_state;\n    }\n  } else {\n    if (prevState.when_to_display - 1000 === nextProps.time) {\n      adapt_state.questions_asked.push(RanNum.state.current_question);\n      adapt_state.current_question_number += 1;\n      adapt_state.current_question = (RanNum.getRandomInt(RanNum.props.max), RanNum.getRandomInt(RanNum.props.max), \" + \");\n      adapt_state.is_displayed = false;\n      RanNum.props.update_answers({\n        questions_asked: adapt_state.questions_asked,\n        question_answers: adapt_state.question_answers\n      });\n      return adapt_state;\n    }\n  }\n\n  return null;\n};\n\nexport default RanNum;","map":{"version":3,"names":["React","Component","Modal","Button","Form","Container","Row","Col","Alert","getRandomInt","max","Math","floor","random","RanNum","state","questions_asked","question_answers","current_question","props","current_question_number","is_displayed","when_to_display","update_answers","event","adapt_state","target","value","setState","submitHandler","push","render","disabled","getDerivedStateFromProps","nextProps","prevState","time","last_call","interval"],"sources":["/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/src/RanNum.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { Form } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\ngetRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\nclass RanNum extends Component {\n  state = {\n    questions_asked: [],\n    question_answers: [],\n    current_question:\n      (this.getRandomInt(this.props.max),\n      this.getRandomInt(this.props.max),\n      \" + \"),\n    current_question_number: 0,\n    is_displayed: true,\n    when_to_display: 30000,\n  };\n\n  update_answers = (event) => {\n    const adapt_state = this.state;\n    adapt_state.question_answers[this.state.current_question_number] =\n      event.target.value;\n    this.setState({ adapt_state });\n  };\n\n  submitHandler = () => {\n    const adapt_state = this.state;\n    adapt_state.questions_asked.push(this.state.current_question);\n    adapt_state.current_question_number += 1;\n    adapt_state.current_question =\n      (this.getRandomInt(this.props.max),\n      this.getRandomInt(this.props.max),\n      \" + \");\n    adapt_state.is_displayed = false;\n    this.setState({ adapt_state });\n    this.props.update_answers({\n      questions_asked: adapt_state.questions_asked,\n      question_answers: adapt_state.question_answers,\n    });\n  };\n\n  static getDerivedStateFromProps = (nextProps, prevState) => {\n    const adapt_state = prevState;\n    if (!prevState.is_displayed) {\n      if (prevState.when_to_display === nextProps.time) {\n        adapt_state.is_displayed = true;\n        adapt_state.last_call = prevState.when_to_display + nextProps.interval;\n        return adapt_state;\n      }\n    } else {\n      if (prevState.when_to_display - 1000 === nextProps.time) {\n        adapt_state.questions_asked.push(this.state.current_question);\n        adapt_state.current_question_number += 1;\n        adapt_state.current_question =\n          (this.getRandomInt(this.props.max),\n          this.getRandomInt(this.props.max),\n          \" + \");\n        adapt_state.is_displayed = false;\n        this.props.update_answers({\n          questions_asked: adapt_state.questions_asked,\n          question_answers: adapt_state.question_answers,\n        });\n        return adapt_state;\n      }\n    }\n    return null;\n  };\n  render() {\n    if (this.state.is_displayed) {\n      return (\n        <div>\n          {\" \"}\n          <Form>\n            <Form.Group className=\"mb-3\" controlId={\"Form.Question\"}>\n              <Form.Label>\n                <div>\n                  {\" \"}\n                  Please solve the following math problem: <br />\n                  <h4>\n                    {\" \"}\n                    {this.state.current_question[0]}{\" \"}\n                    {this.state.current_question[2]}{\" \"}\n                    {this.state.current_question[1]}\n                  </h4>\n                </div>\n              </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={1}\n                onChange={this.update_answers}\n                disabled={this.props.disabled}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              onClick={this.submitHandler}\n            >\n              Submit\n            </Button>\n          </Form>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default RanNum;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}