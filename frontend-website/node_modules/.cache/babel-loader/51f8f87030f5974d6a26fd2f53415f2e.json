{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nvar useStyles = createUseStyles({\n  labelBox: {\n    left: function (props) {\n      return props.left + \"px\";\n    },\n    top: function (props) {\n      return props.top + \"px\";\n    },\n    position: 'absolute'\n  },\n  labelInput: {}\n});\nvar LabelBox = React.forwardRef(function (_a, forwardedRef) {\n  var inputMethod = _a.inputMethod,\n      props = __rest(_a, [\"inputMethod\"]);\n\n  var classes = useStyles(props);\n\n  var _b = useState(''),\n      value = _b[0],\n      setValue = _b[1];\n\n  var changeHandler = function (e) {\n    setValue(e.target.value);\n\n    if (inputMethod === 'select') {\n      props.onSubmit(e.target.value);\n    }\n  };\n\n  var keyPressHandler = function (e) {\n    if (e.which === 13) {\n      props.onSubmit(value);\n    }\n\n    return e.which !== 13;\n  };\n\n  var _c = props.labels,\n      labels = _c === void 0 ? ['object'] : _c;\n\n  if (typeof labels === 'string') {\n    labels = [labels];\n  }\n\n  var labelInput;\n\n  switch (inputMethod) {\n    case 'select':\n      labelInput = React.createElement(\"select\", {\n        className: classes.labelInput,\n        name: \"label\",\n        ref: forwardedRef,\n        onChange: changeHandler,\n        onMouseDown: function (e) {\n          return e.stopPropagation();\n        }\n      }, React.createElement(\"option\", null, \"choose an item\"), labels.map(function (label) {\n        return React.createElement(\"option\", {\n          key: label,\n          value: label\n        }, label);\n      }));\n      break;\n\n    case 'text':\n      labelInput = React.createElement(\"input\", {\n        className: classes.labelInput,\n        name: \"label\",\n        type: \"text\",\n        value: value,\n        ref: forwardedRef,\n        onKeyPress: keyPressHandler,\n        onChange: changeHandler,\n        onMouseDown: function (e) {\n          return e.stopPropagation();\n        }\n      });\n      break;\n\n    default:\n      throw \"Invalid labelInput parameter: \" + inputMethod;\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.labelBox\n  }, labelInput);\n});\nLabelBox.displayName = 'LabelBox';\nexport default LabelBox;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,IAAMC,SAAS,GAAGD,eAAe,CAAC;EAC9BE,QAAQ,EAAE;IACNC,IAAI,EAAE,UAACC,KAAD,EAAa;MAAK,OAAGA,KAAK,CAACD,IAAN,GAAU,IAAb;IAAiB,CADnC;IAENE,GAAG,EAAE,UAACD,KAAD,EAAa;MAAK,OAAGA,KAAK,CAACC,GAAN,GAAS,IAAZ;IAAgB,CAFjC;IAGNC,QAAQ,EAAE;EAHJ,CADoB;EAM9BC,UAAU,EAAE;AANkB,CAAD,CAAjC;AAgBA,IAAMC,QAAQ,GAAGV,KAAK,CAACW,UAAN,CAA6B,UAACC,EAAD,EAA4BC,YAA5B,EAAwC;EAArC,eAAW,iBAAX;EAAA,IAAgBP,KAAK,cAAvB,eAAuB,CAArB;;EAC7C,IAAMQ,OAAO,GAAGX,SAAS,CAACG,KAAD,CAAzB;;EACM,SAAoBL,QAAQ,CAAC,EAAD,CAA5B;EAAA,IAACc,KAAK,QAAN;EAAA,IAAQC,QAAQ,QAAhB;;EACN,IAAMC,aAAa,GAAG,UAACC,CAAD,EAA8E;IAChGF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;;IACA,IAAIK,WAAW,KAAK,QAApB,EAA8B;MAC1Bd,KAAK,CAACe,QAAN,CAAeH,CAAC,CAACC,MAAF,CAASJ,KAAxB;IACH;EACJ,CALD;;EAMA,IAAMO,eAAe,GAAG,UAACJ,CAAD,EAAuB;IAC3C,IAAIA,CAAC,CAACK,KAAF,KAAY,EAAhB,EAAoB;MAChBjB,KAAK,CAACe,QAAN,CAAeN,KAAf;IACH;;IAED,OAAOG,CAAC,CAACK,KAAF,KAAY,EAAnB;EACH,CAND;;EAOM,SAAwBjB,KAAK,OAA7B;EAAA,UAAM,mBAAG,CAAC,QAAD,CAAH,GAAakB,EAAnB;;EACN,IAAI,OAAOC,MAAP,KAAkB,QAAtB,EAAgC;IAC5BA,MAAM,GAAG,CAACA,MAAD,CAAT;EACH;;EACD,IAAIhB,UAAJ;;EACA,QAAQW,WAAR;IACI,KAAK,QAAL;MACIX,UAAU,GACNT;QACI0B,SAAS,EAAEZ,OAAO,CAACL,UADvB;QAEIkB,IAAI,EAAC,OAFT;QAGIC,GAAG,EAAEf,YAHT;QAIIgB,QAAQ,EAAEZ,aAJd;QAKIa,WAAW,EAAE,UAACZ,CAAD,EAAE;UAAK,QAAC,CAACa,eAAF;QAAmB;MAL3C,GAOI/B,qDAPJ,EAQKyB,MAAM,CAACO,GAAP,CAAW,UAACC,KAAD,EAAM;QAAK,OACnBjC;UAAQkC,GAAG,EAAED,KAAb;UAAoBlB,KAAK,EAAEkB;QAA3B,GACKA,KADL,CADmB;MAItB,CAJA,CARL,CADJ;MAgBA;;IACJ,KAAK,MAAL;MACIxB,UAAU,GACNT;QACI0B,SAAS,EAAEZ,OAAO,CAACL,UADvB;QAEIkB,IAAI,EAAC,OAFT;QAGIQ,IAAI,EAAC,MAHT;QAIIpB,KAAK,EAAEA,KAJX;QAKIa,GAAG,EAAEf,YALT;QAMIuB,UAAU,EAAEd,eANhB;QAOIO,QAAQ,EAAEZ,aAPd;QAQIa,WAAW,EAAE,UAACZ,CAAD,EAAE;UAAK,QAAC,CAACa,eAAF;QAAmB;MAR3C,EADJ;MAYA;;IACJ;MACI,MAAM,mCAAiCX,WAAvC;EAlCR;;EAqCA,OAAOpB;IAAK0B,SAAS,EAAEZ,OAAO,CAACV;EAAxB,GAAmCK,UAAnC,CAAP;AACH,CA3DgB,CAAjB;AA4DAC,QAAQ,CAAC2B,WAAT,GAAuB,UAAvB;AAEA,eAAe3B,QAAf","names":["React","useState","createUseStyles","useStyles","labelBox","left","props","top","position","labelInput","LabelBox","forwardRef","_a","forwardedRef","classes","value","setValue","changeHandler","e","target","inputMethod","onSubmit","keyPressHandler","which","_c","labels","className","name","ref","onChange","onMouseDown","stopPropagation","map","label","key","type","onKeyPress","displayName"],"sources":["/Users/sidvas/Desktop/Human-Loop-Mturk/frontend-website/node_modules/react-bbox-annotator/src/LabelBox/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n    labelBox: {\n        left: (props: Props) => `${props.left}px`,\n        top: (props: Props) => `${props.top}px`,\n        position: 'absolute',\n    },\n    labelInput: {},\n});\n\ninterface Props {\n    left: number;\n    top: number;\n    inputMethod: 'text' | 'select';\n    labels?: string | string[];\n    onSubmit: (label: string) => void;\n}\nconst LabelBox = React.forwardRef<any, Props>(({ inputMethod, ...props }, forwardedRef) => {\n    const classes = useStyles(props);\n    const [value, setValue] = useState('');\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLSelectElement>) => {\n        setValue(e.target.value);\n        if (inputMethod === 'select') {\n            props.onSubmit(e.target.value);\n        }\n    };\n    const keyPressHandler = (e: React.KeyboardEvent) => {\n        if (e.which === 13) {\n            props.onSubmit(value);\n        }\n\n        return e.which !== 13;\n    };\n    let { labels = ['object'] } = props;\n    if (typeof labels === 'string') {\n        labels = [labels];\n    }\n    let labelInput;\n    switch (inputMethod) {\n        case 'select':\n            labelInput = (\n                <select\n                    className={classes.labelInput}\n                    name=\"label\"\n                    ref={forwardedRef}\n                    onChange={changeHandler}\n                    onMouseDown={(e) => e.stopPropagation()}\n                >\n                    <option>choose an item</option>\n                    {labels.map((label) => (\n                        <option key={label} value={label}>\n                            {label}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        case 'text':\n            labelInput = (\n                <input\n                    className={classes.labelInput}\n                    name=\"label\"\n                    type=\"text\"\n                    value={value}\n                    ref={forwardedRef}\n                    onKeyPress={keyPressHandler}\n                    onChange={changeHandler}\n                    onMouseDown={(e) => e.stopPropagation()}\n                />\n            );\n            break;\n        default:\n            throw `Invalid labelInput parameter: ${inputMethod}`;\n    }\n\n    return <div className={classes.labelBox}>{labelInput}</div>;\n});\nLabelBox.displayName = 'LabelBox';\n\nexport default LabelBox;\n"]},"metadata":{},"sourceType":"module"}